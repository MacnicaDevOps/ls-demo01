version: 2.1

executors:
  builder:
    machine: true
  deployer:
    docker:
      - image: minepicco/cc-build-image:latest

workflows:
  version: 2.
  
  build-deploy:
    jobs:
      - build_scan:
          context: webpage_deployment
      - push:
          context: webpage_deployment
          requires:
            - build_scan
      - hold:
          type: approval
          requires:
            - build_scan
      - deploy:
          requires:
            - hold
          context: webpage_deployment

jobs:
  build_scan:
    executor: builder
    
    environment:
      imagename: "macnicadevops"
      
    steps:
      - checkout
                     
      - run:
          name: Build Image
          command: |
            docker login -u $docker_user -p $docker_pass
            docker build --tag "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_BUILD_NUM}" .

      - run:
          name: "simple test"
          command: |
            docker run --rm --name web -p 80:80 -d "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_BUILD_NUM}"
            sleep 1 && curl http://localhost
            docker stop web

      - run:
          name: "Twistlock Vuln/Compliance check"
          command: |
            curl -k -u "${pc_user}:${pc_pass}" --output twistcli "${pc_url}/api/v1/util/twistcli" 
            chmod a+x twistcli
            sudo ./twistcli images scan --address "${pc_url}" -u "${pc_user}" -p "${pc_pass}" "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_BUILD_NUM}" --details

      - run:
          name: "Triage vulnerabilities"
          command: |
            chmod +x triage.sh
            ./triage.sh
      - run:
          name: prepare artifact
          command: |
            mkdir /tmp/artifacts
            docker save "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_BUILD_NUM}" > "/tmp/artifacts/image.tar"
      - store_artifacts:
          path: image.tar
          destination: image
      - store_artifacts:
          path: /tmp/artifacts

  push:
    executor: deployer
    environment:
      imagename: "macnicadevops"
      
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish Image
          command: |
            docker login -u "${docker_user}" -p "${docker_pass}"
            docker tag "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_BUILD_NUM}" "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:latest"
            docker push "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:${CIRCLE_BUILD_NUM}"
            docker push "${imagename}/${CIRCLE_PROJECT_REPONAME,,}:latest"

  deploy:
    executor: deployer
    environment:
      comp: "low"
      imagename: "macnicadevops"
      
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Configure gcloud cli
          command: |
            echo $key>key.json
            gcloud auth activate-service-account --key-file=key.json
            gcloud beta container clusters get-credentials $cluster --region $region --project $project
            
      - run:
          name: Create Kubernetes Manifest
          command: |
            build_num=$((${CIRCLE_BUILD_NUM} - 1))
            deploy_image="${imagename}/${CIRCLE_PROJECT_REPONAME,,}:${build_num}"
            ns="${CIRCLE_PROJECT_REPONAME,,}"
            cat manifest_template.yaml | sed -e "s@-Image_Name-@${deploy_image}@g" | sed -e "s@-Namespace-@${ns}@g" > web.yaml
      - run:
          name: deployment
          command: |
            kubectl apply -f web.yaml
            kubectl get pods -n "${CIRCLE_PROJECT_REPONAME,,}"
